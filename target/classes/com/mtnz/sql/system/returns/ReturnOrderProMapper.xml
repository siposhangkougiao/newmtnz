<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ReturnOrderProMapper">
    <insert id="save" parameterType="pd">
        INSERT INTO return_order_pro(
        return_order_info_id,
        product_name,
        product_price,
        num,
        li_num,
        total,
        product_id,
        norms1,
        norms2,
        norms3,
        norms4,norms5,isThreeSales
        )VALUE (
        #{return_order_info_id},
        #{product_name},
        #{product_price},
        #{num},
        #{li_num},
        #{total},
        #{product_id},
        #{norms1},
        #{norms2},#{norms3},#{norms4},#{norms5},
        #{isThreeSales}
        )
    </insert>

    <insert id="batchSave" parameterType="java.util.Map">
        INSERT INTO order_pro(
        return_order_info_id,
        product_name,
        product_price,
        num,
        total,
        orde_by,
        norms1,
        norms2,
        norms3,
        norms4,norms5,isThreeSales,
        product_id
        )VALUE
        <foreach collection="list" item="item" index="index" separator=",">
            (#{return_order_info_id},#{item.product_name},#{item.product_price},#{item.num},#{item.total},"0",#{item.norms1},#{item.norms2},#{item.norms3},
            #{item.norms4},#{item.norms5},#{item.isThreeSales},#{item.product_id})
        </foreach>
    </insert>

    <select id="findList" parameterType="pd" resultType="pd">
        SELECT
          return_order_pro_id,
          return_order_info_id,
          replace(product_name,"XINg"," ") as product_name,
          product_price,
          num,
          total,
          orde_by,
          norms1,
          norms2,
          norms3,
          norms4,norms5,isThreeSales,
          product_id,
          li_num
        FROM return_order_pro
        WHERE return_order_info_id=#{return_order_info_id}
        ORDER BY return_order_pro_id
    </select>

    <select id="findQuanBu" parameterType="pd" resultType="pd">
        SELECT
          op.*,
          oi.date,
          oi.status,
          oi.money,
          oi.owe_money,
          oi.total_money,
          oi.discount_money,
          oi.return_date,
          oi.name,
          oi.phone,
          oi.order_number,
          oi.open_bill
        from(
            SELECT
                  return_order_pro_id,
                  return_order_info_id,
                  replace(product_name,"XINg"," ") as product_name,
                  product_price,
                  num,
                  total,
                  orde_by,
                  norms1,
                  norms2,
                  norms3,
                  norms4,norms5,isThreeSales,
                  product_id
                FROM return_order_pro
                ORDER BY return_order_pro_id
        ) op
        LEFT JOIN return_order_info oi on oi.return_order_info_id=op.return_order_info_id
        where oi.store_id=#{store_id}
        <if test="startTime!=null and startTime!=''">
            and Date(oi.return_date) &gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and Date(oi.return_date) &lt;=#{endTime}
        </if>
        ORDER BY oi.return_date DESC
    </select>
</mapper>