<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderInfoMapper">
    <insert id="save" parameterType="pd" useGeneratedKeys="true" keyProperty="order_info_id">
        INSERT INTO order_info(
        store_id,
        customer_id,
        name,
        phone,
        address,
        money,
        date,
        status,
        owe_money,
        total_money,
        discount_money,
        medication_date,
        remarks,
        order_number,
        open_bill
        ) VALUE (
        #{store_id},
        #{customer_id},
        #{name},
        #{phone},
        #{address},
        #{money},
        #{date},
        #{status},
        #{owe_money},
        #{total_money},
        #{discount_money},
        #{medication_date},
        #{remarks},
        #{order_number},
        #{open_bill}
        )
    </insert>


    <select id="findById" parameterType="pd" resultType="pd">
        SELECT
            order_info_id,
            store_id,
            customer_id,
            name,
            phone,
            address,
            money,
            date,
            status,
            owe_money,
            total_money,
            discount_money,
            medication_date,
            remarks,
            order_number,
            open_bill,
            revokes
        FROM order_info
        where order_info_id=#{order_info_id}
    </select>

    <!-- 查询店面所有订单 -->
    <select id="datalistPage" parameterType="page" resultType="pd">
        SELECT
            order_info_id,
            store_id,
            customer_id,
            name,
            phone,
            address,
            money,
            date,
            status,
            owe_money,
            total_money,
            discount_money,
            medication_date,
            remarks,
            order_number,
            open_bill,
            revokes
        FROM order_info
        where store_id=#{pd.store_id}
        <if test="pd.startTime!=null and pd.startTime!=''">
            and DATE(date) &gt;=#{pd.startTime}
        </if>
        <if test="pd.endTime!=null and pd.endTime!=''">
            and DATE(date) &lt;=#{pd.endTime}
        </if>
        <if test="pd.revokes!=null and pd.revokes!=''">
            and revokes=#{pd.revokes}
        </if>
        <if test="pd.status==null or pd.status==0">
            ORDER BY date DESC
        </if>
        <if test="pd.status==1">
            ORDER BY date
        </if>
        <if test="pd.status==2">
            ORDER BY return_date DESC
        </if>
    </select>

    <select id="findSumTotalMoney" parameterType="pd" resultType="pd">
        SELECT SUM(money) as money FROM order_info
        where store_id=#{store_id} and revokes='0'
        <if test="startTime!=null and startTime!=''">
            and DATE(date) &gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and DATE(date) &lt;=#{endTime}
        </if>
        <if test="revokes!=null and revokes!=''">
            and revokes=#{revokes}
        </if>
    </select>

    <!-- 查询客户订单 -->
    <select id="customerlistPage" parameterType="page" resultType="pd">
        SELECT
            order_info_id,
            store_id,
            customer_id,
            name,
            phone,
            address,
            money,
            date,
            status,
            owe_money,
            total_money,
            discount_money,
            medication_date,
            remarks,
            order_number,
            open_bill,
            revokes
        FROM order_info
        where customer_id=#{pd.customer_id}
        ORDER BY date DESC
    </select>

    <!-- 修改订单 -->
    <update id="updateOrderInfo" parameterType="pd">
        UPDATE order_info
        SET name=#{name},
        phone=#{phone},
        address=#{address},
        money=#{money},
        owe_money=#{owe_money},
        total_money=#{total_money},
        discount_money=#{discount_money}
        customer_id=#{customer_id}
        where order_info_id=#{order_info_id}
    </update>

    <!--    查询客户总消费    -->
    <select id="findSumMoney" parameterType="pd" resultType="pd">
        SELECT SUM(money) as money FROM order_info where customer_id=#{customer_id} and revokes='0'
    </select>


    <!--    查询客户总优惠    -->
    <select id="findSumdiscountMoney" parameterType="pd" resultType="pd">
        SELECT SUM(discount_money) as discountmoney FROM order_info where customer_id=#{customer_id} and revokes='0'
    </select>

    <select id="owelistPage" parameterType="page" resultType="pd">
        SELECT
            order_info_id,
            store_id,
            customer_id,
            name,
            phone,
            address,
            money,
            date,
            status,
            owe_money,
            total_money,
            discount_money,
            medication_date,
            remarks,
            order_number,
            open_bill,
            revokes
        FROM order_info
        where status='1' and revokes='0' and customer_id=#{pd.customer_id}
        ORDER BY date DESC
    </select>

    <select id="findLikeOrderInfo" parameterType="pd" resultType="pd">
        SELECT
            order_info_id,
            store_id,
            customer_id,
            name,
            phone,
            address,
            money,
            date,
            status,
            owe_money,
            total_money,
            discount_money,
            medication_date,
            remarks,
            order_number,
            open_bill,
            revokes
        FROM order_info
        where store_id=#{store_id} and
        (
            POSITION(#{name} IN `name`)
            or
            POSITION(#{name} IN phone)
        )
        <if test="status==null or status==0">
            ORDER BY date DESC
        </if>
        <if test="status==1">
            ORDER BY date
        </if>
    </select>


    <select id="findlike" parameterType="pd" resultType="pd">
        SELECT
            order_info_id,
            store_id,
            customer_id,
            name,
            phone,
            address,
            money,
            date,
            status,
            owe_money,
            total_money,
            discount_money,
            medication_date,
            remarks,
            order_number,
            open_bill,
            revokes
        FROM order_info
        where status='1' and customer_id=#{customer_id}
        ORDER BY date DESC
    </select>

    <select id="findSumOweMoney" parameterType="pd" resultType="pd">
        SELECT SUM(owe_money) as money FROM `order_info` WHERE customer_id=#{customer_id} and status='1' and revokes='0'
    </select>


    <select id="findkinglist" parameterType="page" resultType="pd">
        SELECT
	      o.*,
	      c.`name`,
	      c.phone
        from(
	      SELECT
	        order_info_id,
            order_number,
	        store_id,
	        customer_id,
	        date,
	        SUM(total_money) as total_money
          FROM
	        order_info
        where store_id=#{store_id} and revokes='0'
        <if test="year!=null and year!=''">
            and year(date)=#{year}
        </if>
        <if test="month!=null and month!=''">
            and month(date)=#{month}
        </if>
        GROUP BY customer_id
        ORDER BY
	      total_money DESC
        limit #{SHU1},10
      ) o
      LEFT JOIN customer c on c.customer_id=o.customer_id
    </select>

    <select id="findkingcount" parameterType="pd" resultType="pd">
        SELECT
        count(1) as count
        from(
        SELECT
        customer_id
        FROM
        order_info
        where store_id=#{store_id}
        <if test="year!=null and year!=''">
            and year(date)=#{year}
        </if>
        <if test="month!=null and month!=''">
            and month(date)=#{month}
        </if>
        GROUP BY customer_id
        ) t
        LEFT JOIN customer c on t.customer_id=c.customer_id
    </select>
    
    
    <select id="AnalysislistPage" parameterType="page" resultType="pd">
         SELECT
            order_info_id,
            store_id,
            customer_id,
            name,
            phone,
            address,
            money,
            date,
            status,
            owe_money,
            total_money,
            discount_money,
            medication_date,
            remarks,
            order_number,
            revokes
        FROM order_info
        where store_id=#{pd.store_id} and revokes='0'
        <if test="pd.status==1 or pd.status==2">
            and date &gt;=#{pd.date}
        </if>
        <if test="pd.status==3">
            and date &gt;=#{pd.startTime} and date &lt;=#{pd.endTime}
        </if>
        <if test="pd.status==4">
            and DATE_FORMAT(date,'%y-%m-%d') = DATE_FORMAT(#{pd.date},'%y-%m-%d')
        </if>
        ORDER BY date DESC
    </select>
    
    <select id="findSumAnalysisMoney" parameterType="pd" resultType="pd">
        select
            SUM(total_money) AS total_money,
	        SUM(money) AS money,
	        SUM(owe_money) AS owe_money,
	        SUM(discount_money) AS discount_money
        from order_info where store_id=#{store_id} and revokes='0'
        <if test="status==1 or status==2">
            and Date(date) &gt;=#{date}
        </if>
        <if test="status==3">
            and Date(date) &gt;=#{startTime} and Date(date) &lt;=#{endTime}
        </if>
        <if test="status==4">
            and Date(date) = #{date}
        </if>
    </select>
    
    <select id="findGroupCustomer" parameterType="pd" resultType="pd">
        SELECT count(1) from order_info where store_id=#{store_id}
        <if test="status==1 or status==2">
            and date &gt;=#{date}
        </if>
        <if test="status==3">
            and date &gt;=#{startTime} and date &lt;=#{endTime}
        </if>
        <if test="status==4">
            and date =#{date}
        </if>
        GROUP BY customer_id
    </select>

    <select id="findStoreidSumMoney" parameterType="pd" resultType="pd">
        SELECT SUM(money) as money from order_info where store_id=#{store_id} and revokes='0'
        <if test="status==3">
            and DATE(date) &gt;=#{startTime} and DATE(date) &lt;=#{endTime}
        </if>
    </select>


    <!--<update id="edutReturnGoods" parameterType="pd">
        UPDATE  order_info
        SET return_goods=#{return_goods},
            return_date=#{return_date}
        WHERE order_info_id=#{order_info_id}
    </update>-->
    
    <select id="findOrderUserId" parameterType="pd" resultType="pd">
         SELECT
            order_info_id,
            store_id,
            customer_id,
            name,
            phone,
            address,
            money,
            date,
            status,
            owe_money,
            total_money,
            discount_money,
            medication_date,
            remarks,
            order_number,
            revokes
        FROM order_info
        where customer_id=#{customer_id}
        ORDER BY order_info_id DESC
        limit 1
    </select>

    <select id="findReportAnalysis" parameterType="pd" resultType="pd">
        SELECT
            dday AS date,
            SUM(money) AS money,
            SUM(total_money) AS total_money,
            SUM(receivable) AS receivable
        FROM
        (
            SELECT
                datelist AS dday,
                '0' AS money,
                '0' AS total_money,
                '0' AS receivable
            FROM
                calendar
            WHERE
                DATE(datelist) &gt;=#{startTime} and DATE(datelist)&lt;=#{endTime}
            UNION ALL
                SELECT
                    date,
                    money as money,
                    total_money,
                    '0' AS receivable
                FROM
                    order_info
                WHERE
                    store_id = #{store_id}
                    and DATE(date) &gt;=#{startTime} and DATE(date) &lt;=#{endTime} and revokes='0'
                UNION ALL
                    SELECT
                        ok.date,
                        '0' AS money,
                        '0' AS total_money,
                    IFNULL((ok.nums * ok.purchase_price), 0) AS receivable
                    FROM
                          order_kuncun ok
                    LEFT JOIN order_pro op on op.order_pro_id=ok.order_pro_id
                    where ok.store_id = #{store_id} and op.revokes='0'  and DATE(ok.date) &gt;=#{startTime}
                      and DATE(ok.date) &lt;=#{endTime}

        ) a
	    GROUP BY date
    </select>


    <select id="findReportAnalysisYue" parameterType="pd" resultType="pd">
        SELECT
            dday as date,
            SUM(money) as money,
            SUM(total_money) as total_money,
            SUM(receivable) AS receivable
        FROM
        (
            SELECT
                DATE_FORMAT(datelist,'%Y-%m') AS dday,
                '0' as money,
                '0' as total_money,
                '0' AS receivable
            FROM
                calendar
            WHERE 1=1
            <if test="startTime!=null and startTime!=''">
                and DATE(datelist) &gt;=#{startTime}
            </if>
            <if test="endTime!=null and endTime!=''">
                and DATE(datelist)&lt;=#{endTime}
            </if>
            UNION ALL
            SELECT
                DATE_FORMAT(date,'%Y-%m'),
                money,
                total_money,
                '0' AS receivable
            FROM
                order_info
            WHERE store_id=#{store_id} and revokes='0'
        <if test="startTime!=null and startTime!=''">
            and DATE(date) &gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and DATE(date) &lt;=#{endTime}
        </if>
        UNION ALL
        SELECT
        DATE_FORMAT(ok.date,'%Y-%m'),
        '0' AS money,
        '0' AS total_money,
        IFNULL((ok.nums * ok.purchase_price), 0) AS receivable
        FROM
        order_kuncun ok
        LEFT JOIN order_pro op on op.order_pro_id=ok.order_pro_id
        where ok.store_id = #{store_id} and op.revokes='0'
        <if test="startTime!=null and startTime!=''">
            and DATE(ok.date) &gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and DATE(ok.date) &lt;=#{endTime}
        </if>
        ) a
        GROUP BY date
    </select>

    <select id="findReportAnalysisXiaoShi" parameterType="pd" resultType="pd">
        SELECT
			dday AS date,
			SUM(money) AS money,
			SUM(total_money) AS total_money,
			SUM(receivable) AS receivable
		FROM
			(
				SELECT
					datelist AS dday,
					'0' AS money,
					'0' AS total_money,
					'0' AS receivable
				FROM
					calendar_copy
				UNION ALL
					SELECT
						DATE_FORMAT(date, '%H'),
						money,
						total_money,
						'0' AS receivable
					FROM
						order_info
					WHERE
						store_id = #{store_id} and revokes='0' and DATE(date)=#{startTime}
				 UNION ALL
                    SELECT
                        ok.date,
                        '0' AS money,
                        '0' AS total_money,
                    IFNULL((ok.nums * ok.purchase_price), 0) AS receivable
                    FROM
                          order_kuncun ok
                    LEFT JOIN order_pro op on op.order_pro_id=ok.order_pro_id
                    where ok.store_id = #{store_id} and op.revokes='0' and DATE(date)=#{startTime}
			) a
            GROUP BY
                date
        order by cast(date as SIGNED INTEGER)
    </select>








    <select id="findReportAnalysiss" parameterType="pd" resultType="pd">
        SELECT
            dday AS date,
            SUM(money) AS money,
            SUM(total_money) AS total_money
        FROM
        (
          SELECT
            datelist AS dday,
            '0' AS money,
            '0' AS total_money
          FROM
        calendar
        WHERE
          DATE(datelist) &gt;=#{startTime} and DATE(datelist)&lt;=#{endTime}
        UNION ALL
        SELECT
            Date(date),
            money as money,
            total_money
        FROM
            order_info
        WHERE
            store_id = #{store_id}
            and DATE(date) &gt;=#{startTime} and DATE(date) &lt;=#{endTime} and revokes='0'
         ) a
        GROUP BY date
    </select>




    <select id="findReportAnalysisXiaoShis" parameterType="pd" resultType="pd">
        SELECT
        dday AS date,
        SUM(money) AS money,
        SUM(total_money) AS total_money
        FROM
        (
        SELECT
            datelist AS dday,
            '0' AS money,
            '0' AS total_money
        FROM
           calendar_copy
        UNION ALL
        SELECT
            DATE_FORMAT(date, '%H'),
            money,
            total_money
        FROM
          order_info
        WHERE
          store_id = #{store_id} and revokes='0' and DATE(date)=#{startTime}
        ) a
        GROUP BY
        date
        order by cast(date as SIGNED INTEGER)
    </select>


    <select id="findReportAnalysisYues" parameterType="pd" resultType="pd">
        SELECT
            dday as date,
            SUM(money) as money,
            SUM(total_money) as total_money
        FROM
        (
        SELECT
            DATE_FORMAT(datelist,'%Y-%m') AS dday,
            '0' as money,
            '0' as total_money
        FROM
        calendar
        WHERE 1=1
        <if test="startTime!=null and startTime!=''">
            and DATE(datelist) &gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and DATE(datelist)&lt;=#{endTime}
        </if>
        UNION ALL
        SELECT
            DATE_FORMAT(date,'%Y-%m'),
            money,
            total_money
        FROM
        order_info
        WHERE store_id=#{store_id} and revokes='0'
        <if test="startTime!=null and startTime!=''">
            and DATE(date) &gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and DATE(date) &lt;=#{endTime}
        </if>
        ) a
        GROUP BY date
    </select>







    <select id="findReportAnalysisWeb" parameterType="pd" resultType="pd">
        SELECT
            DATE(dday) AS date,
            SUM(money) AS money,
            SUM(total_money) AS total_money,
            SUM(receivable) AS receivable
        FROM
        (
            SELECT
            datelist AS dday,
            '0' AS money,
            '0' AS total_money,
            '0' AS receivable
            FROM
            calendar
            WHERE
            DATE(datelist) &gt;=#{startTime} and DATE(datelist)&lt;=#{endTime}
        UNION ALL
            SELECT
            date,
            discount_money as money,
            total_money,
            '0' AS receivable
            FROM
            order_info
            WHERE
            store_id = #{store_id}
            and DATE(date) &gt;=#{startTime} and DATE(date) &lt;=#{endTime} and revokes='0'
        UNION ALL
            SELECT
            ok.date,
            '0' AS money,
            '0' AS total_money,
            IFNULL((ok.num * ok.purchase_price), 0) AS receivable
            FROM
            order_kuncun ok
            LEFT JOIN order_pro op on op.order_pro_id=ok.order_pro_id
            where ok.store_id = #{store_id} and op.revokes='0'  and DATE(ok.date) &gt;=#{startTime}
            and DATE(ok.date) &lt;=#{endTime}
        ) a
        GROUP BY date
    </select>



    <select id="findReportAnalysisYueWeb" parameterType="pd" resultType="pd">
        SELECT
        dday as date,
        SUM(money) as money,
        SUM(total_money) as total_money,
        SUM(receivable) AS receivable
        FROM
        (
        SELECT
        DATE_FORMAT(datelist,'%Y-%m') AS dday,
        '0' as money,
        '0' as total_money,
        '0' AS receivable
        FROM
        calendar
        WHERE 1=1
        <if test="startTime!=null and startTime!=''">
            and DATE(datelist) &gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and DATE(datelist)&lt;=#{endTime}
        </if>
        UNION ALL
        SELECT
        DATE_FORMAT(date,'%Y-%m'),
        discount_money as money,
        total_money,
        '0' AS receivable
        FROM
        order_info
        WHERE store_id=#{store_id} and revokes='0'
        <if test="startTime!=null and startTime!=''">
            and DATE(date) &gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and DATE(date) &lt;=#{endTime}
        </if>
        UNION ALL
        SELECT
        DATE_FORMAT(ok.date,'%Y-%m'),
        '0' AS money,
        '0' AS total_money,
        IFNULL((ok.num * ok.purchase_price), 0) AS receivable
        FROM
        order_kuncun ok
        LEFT JOIN order_pro op on op.order_pro_id=ok.order_pro_id
        where ok.store_id = #{store_id} and op.revokes='0'
        <if test="startTime!=null and startTime!=''">
            and DATE(ok.date) &gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and DATE(ok.date) &lt;=#{endTime}
        </if>
        ) a
        GROUP BY date
    </select>


    <update id="editrevokes" parameterType="pd">
        UPDATE order_info
        SET revokes='1'
        WHERE order_info_id=#{order_info_id}
    </update>

    <select id="AdminlistPage" parameterType="page" resultType="pd">
        SELECT
            order_info_id,
            store_id,
            customer_id,
            name,
            phone,
            address,
            money,
            date,
            status,
            owe_money,
            total_money,
            discount_money,
            medication_date,
            remarks,
            order_number,
            open_bill,
            revokes
        FROM order_info
        WHERE revokes='0'
        <if test="pd.store_id==null or pd.store_id==''">
            and store_id in (
            SELECT store_id FROM admin_relation where uid=#{pd.uid}
            )
        </if>
        <if test="pd.store_id!=null and pd.store_id!=''">
            and store_id=#{pd.store_id}
        </if>
        <if test="pd.name!=null and pd.name!=''">
            and (
            POSITION(#{pd.name} IN name)
            OR
            POSITION(#{pd.name} IN phone)
            )
        </if>
        <if test="pd.startTime!=null and pd.startTime!=''">
            and date &gt;=#{pd.startTime}
        </if>
        <if test="pd.endTime!=null and pd.endTime!=''">
            and DATE(date) &lt;=#{pd.endTime}
        </if>
        ORDER BY date DESC
    </select>

</mapper>